require 'json'

RESPONSE='{"catalog": {
			"1": {
				"title": "Left Behind",
				"Writers": ["Jerry B. Jenkins", "Tim LaHaye"],
				"Stars": ["Nicolas Cage", "Lea Thompson", "Cassi Thomson"],
				"Director": "Vic Armstrong",
				"theaters": ["Ukraine", "Big World"],
				"description": "A small group of survivors are left behind after millions of people suddenly vanish and the world is plunged into chaos and destruction."
				},
			"2": {
				"title": "Into the storm",
				"Writers": ["John Swetnam"],
				"Stars": ["Richard Armitage", "Sarah Wayne Callies", "Matt Walsh"],
				"Director": "Steven Quale",
				"theaters": ["Ukraine", "Big World"],
				"description": "Storm trackers, thrill-seekers, and everyday townspeople document an unprecedented onslaught of tornadoes touching down in the town of Silverton."
				},
			"3": {
				"title": "Les Miserables",
				"Writers": ["Victor Hugo ", "Rafael Yglesias"],
				"Stars": ["Liam Neeson", "Geoffrey Rush", "Uma Thurman"],
				"Director": "Bille August",
				"theaters": ["Ukraine", "Big World"],
				"description": "Jean Valjean, a Frenchman imprisoned for stealing bread, must flee a police officer named Javert. "
				},
			"4" : ["editional info", "time of creation", "name of admin"]
			
		}}'


response = JSON.parse(RESPONSE)

GetFilm = Struct.new(*response["catalog"].keys.collect(&:to_sym)) do
	def get_group(data, par)
		data.fetch(par)
	end

# need groub films by actors
	def films_by_actors
		h = {}
		self.each_pair do |k, v|
			# p v
			case v
				when Hash
					new_hash = {}
					title = self.get_group(v, "title")
					stars = self.get_group(v, "Stars")
					new_hash[title] = stars
					h.update(new_hash)
				end
		end
		h
	end

	def save_file(data, param)
		file_out = File.open('out.txt', param)
		file_out.puts data
		file_out.close
	end

	def film_info_txt
		self.save_file("Films for this week:", "w")
		self.each_pair do |k, v|
			case v
				when Hash
					self.save_file("Film #{k} :", "a")
						title = self.get_group(v, "title")
						writers = self.get_group(v, "Writers")
						director = self.get_group(v, "Director")
						stars = self.get_group(v, "Stars")
						description = self.get_group(v, "description")
					self.save_file("The title of this movie is '#{title}'.\nActors are #{stars.join', '}\nWriters:#{writers}\nDirector:#{director}\nDescription: #{description}\n\n", "a")
				when Array
				   self.save_file("Technical data: #{v.join', '}", "a")
				end
		end
	end
end

film = GetFilm.new(*response["catalog"].values)
film.film_info_txt
p film.films_by_actors
